var searchIndex = {};
searchIndex["euler"] = {"doc":"Euler","items":[[3,"Prime","euler","Prime number generator.",null,null],[3,"Sieve","","Prime sieve.",null,null],[3,"Digits","","Iterator over the digits of a number.",null,null],[3,"Rotations","","Iterator over rotations of a number.",null,null],[3,"Permutations","","An iterator over the permutation of elements.",null,null],[5,"factorial","","Returns the `n`th factorial.",null,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[5,"permutations","","Returns an iterator over the `nth` permutation of `count` elements.",null,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"permutations"}}],[11,"new","","Construct a new prime number generator.",0,{"inputs":[],"output":{"name":"self"}}],[11,"nth","","Generates `nth` prime.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"u64"}}],[11,"check","","Checks if a number is prime.",0,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"bool"}}],[11,"new","","Create a new prime sieve, and sieve all numbers up to `max`.",1,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"check","","Checks if a given number is prime or not.",1,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"option"}}],[11,"into_iter","","",1,null],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"rotations"}}],[11,"reverse","","Reverse the direction of the rotations.",2,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"base","","Change the base in which to rotate the number.",2,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"self"}}],[11,"next","","",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"digits"}}],[11,"reverse","","Reverse the order that the digits are being output.",3,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"base","","Change base in which digits are being output.",3,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"self"}}],[11,"next","","",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"of","","Returns an iterator over the `nth` permutation of `count` elements.",4,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"self"}}],[11,"next","","",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"Gcd","","The greatest common divisor of two types.",null,null],[16,"Output","","The resulting type of computing the greatest common divisor of two numbers.",5,null],[10,"gcd","","Computes the greatest common multiple of two numbers.",5,null],[8,"Lcm","","The least common multiple of two types.",null,null],[16,"Output","","The resulting type of computing the least common multiple of two numbers.",6,null],[10,"lcm","","Computes the least common multiple of two numbers.",6,null],[8,"ToDigits","","Trait to convert a number into an iterator over its digits.",null,null],[10,"digits","","Convert self into an iterator over the digits.",7,{"inputs":[{"name":"self"}],"output":{"name":"digits"}}],[8,"IsPalindrome","","Trait to check if a number is a palindrome.",null,null],[10,"is_palindrome","","Checks if `self` is a palindrome in the given base.",8,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[8,"ToPalindrome","","Trait to turn a number into a palindrome.",null,null],[10,"to_palindrome","","Turns self into a palindrome.",9,null],[8,"ToRotations","","Trait to generate an iterator over the rotations of a number.",null,null],[10,"rotations","","Returns an iterator over the rotations of a number.",10,{"inputs":[{"name":"self"}],"output":{"name":"rotations"}}],[8,"ToDivisors","","Trait to turn a number into an `Iterator` over its divisors.",null,null],[10,"divisors","","Return an iterator over the divisors of `self`.",11,{"inputs":[{"name":"self"}],"output":{"name":"divisors"}}]],"paths":[[3,"Prime"],[3,"Sieve"],[3,"Rotations"],[3,"Digits"],[3,"Permutations"],[8,"Gcd"],[8,"Lcm"],[8,"ToDigits"],[8,"IsPalindrome"],[8,"ToPalindrome"],[8,"ToRotations"],[8,"ToDivisors"]]};
initSearch(searchIndex);
